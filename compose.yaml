x-depends_on: &default-depends_on
  "db":
    condition: service_healthy
  "mail":
    condition: service_started

include:
  - application.yaml
  - commonservices.yaml
  - web.yaml

services:
  php-fpm-app:
    image: $ORO_IMAGE:$ORO_IMAGE_TAG
    command: php-fpm
    user: ${ORO_USER_RUNTIME:-www-data}
    env_file: .env
    healthcheck:
      test: "php-fpm-healthcheck"
      interval: 5s
      timeout: 30s
      start_period: 120s
    restart: unless-stopped
    depends_on:
      <<: *default-depends_on
      "init":
        condition: service_completed_successfully    
    volumes:
      - cache:/var/www/oro/var/cache
      - public:/var/www/oro/public
      - public_storage:/var/www/oro/public/media
      - private_storage:/var/www/oro/var/data
      - run_php_fpm:/run/php-fpm

  init:
    image: ${ORO_IMAGE}:$ORO_IMAGE_TAG
    command: init
    env_file: .env
    volumes:
      - etc_nginx:/etc/nginx
      - run_php_fpm:/run/php-fpm
      - public:/var/www/oro/public

  db:
    image: docker.io/oroinc/pgsql:${ORO_PG_VER}
    labels:
      com.symfony.server.service-prefix: ORO_DB
    environment:
      POSTGRES_ROOT_PASSWORD: ${ORO_DB_ROOT_PASSWORD}
      POSTGRES_DB: ${ORO_DB_NAME}
      POSTGRES_USER: ${ORO_DB_USER}
      POSTGRES_PASSWORD: ${ORO_DB_PASSWORD}
    healthcheck:
      test: "pg_isready -U$${POSTGRES_USER} -d$${POSTGRES_DB}"
      start_period: 60s
    restart: unless-stopped

  mail:
    image: mailhog/mailhog
    hostname: mail
    environment:
      MH_UI_WEB_PATH: mailcatcher
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog/maildir
    restart: unless-stopped

volumes:
  cache: {}
  public_storage: {}
  private_storage: {}
  etc_nginx: {}
  run_php_fpm: {}
  public: {}